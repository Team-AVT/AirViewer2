Contract for Programming:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

1.	Class Addpages

/**
*@invariant ("numberOfPages != null && numberOfPages.length() > 0")
*/
class Addpages {
String numberOfPages;
String filePath;
double parsedNumberOfPages;


/**
*@pre ("numberOfPages != null && numberOfPages.length() > 0")
*/
public AddPages (String filePath, String numberOfPages){
     this. filePath = filePath;
     this. numberOfPages = numberOfPages;
     parsedNumberOfPages = Double.parseDouble(numberOfPages);
}

/**
*@pre ("parsedNumberOfPages >= 1.0 ")
*@post ("result == true")
*/
public boolean addPages() throws IOException{
      int intNumberOfPages = (int) parsedNumberOfPages ;
      ---
      ---
      ---
      ---
}
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

@ Invariant: The condition “numberOfPages != null” and “numberOfPages.length() > 0” must be true of a class whenever it is accessible to the client.

@pre-condition: 
1.	The condition “numberOfPages != null” and “numberOfPages.length() > 0” must be true before the constructor method can execute.
2.	The condition " parsedNumberOfPages >= 1.0 " must be true before the addPages() method can execute.

@post-condition: The condition "result == true" must be true when addPages()  method finished executing.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.	Class DeletePages

/**
 * @invariant ("pageNumber != null && pageNumber.length() > 0")
 */

public class DeletePages {

	String pageNumber;
	String filePath;
	int parsedPageNumber;
	File file = null;
	PDDocument document = null;
	int noOfPages;
	
           /**
             * @pre ("pageNumber != null && pageNumber.length() > 0")
             */
	public DeletePages(String pageNumber, String filePath) {
		super();
		this.pageNumber = pageNumber;
		this.filePath = filePath;
		parsedPageNumber = Integer.parseInt(pageNumber) - 1;
		// Loading the file
		file = new File(filePath);
		// Getting the count of pages from document
		noOfPages = document.getNumberOfPages();
	}

	
	/**
	 * @pre ("noOfPages >= parsedPageNumber")
	 * @post ("result == true")
	 */
	public boolean deletePage() throws IOException {
       }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
@ Invariant: The condition “pageNumber != null” and “pageNumber.length() > 0” must be true of a class whenever it is accessible to the client.

@pre-condition: 
1.	The condition “pageNumber != null” and “pageNumber.length() > 0” must be true before the constructor method can execute.
2.	The condition "noOfPages >= parsedPageNumber" must be true before the deletePage() method can execute.

@post-condition: The condition "result == true" must be true when deletePage()  method finished executing.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

3.	Class HighlightText


/**
 * @invariant ("text != null && text.length() > 0")
 */
public class HighlightText {
	
	String text;
	String filePath;
	
/**
 * @pre ("text != null && text.length() > 0")
 */
	public HighlightText(String text, String filePath) {
		super();
		this.text = text;
		this.filePath = filePath;
	}

/**
 * @pre ("text != null && text.length() > 0")
 * @post ("result == true")
 */
	public boolean highlightText() {

      }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
@ Invariant: The condition “text != null” and “text.length() > 0” must be true of a class whenever it is accessible to the client.

@pre-condition: 
1.	The condition “text != null” and “text.length() > 0”  must be true before the constructor method can execute.
2.	The condition “text != null” and “text.length() > 0”  must be true before the highlightText() method can execute.

@post-condition: The condition "result == true" must be true when highlightText ()  method finished executing.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
4.	Class ReplaceText

/**
 * @invariant ("replaceText != null && replaceText.length() > 0 && withText != null && withText.length() > 0")
*/

public class ReplaceText {
	
	String filePath;
	String replaceText;
	String withText;
	
	
/**
 * @pre ("replaceText != null && replaceText.length() > 0 && withText != null && withText.length() > 0")
 */
	public ReplaceText(String filePath, String replaceText, String withText) {
		super();
		this.filePath = filePath;
		this.replaceText = replaceText;
		this.withText = withText;
	}

/**
 * @pre ("replaceText != null && replaceText.length() > 0 && withText != null && withText.length() > 0")
 * @post ("result == true")
 */
	public boolean replaceText() {

    }
	
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
@ Invariant: The condition "replaceText != null”, “replaceText.length() > 0”, “withText != null” and “withText.length() > 0" must be true of a class whenever it is accessible to the client.

@pre-condition: 
1.The condition "replaceText != null”, “replaceText.length() > 0”, “withText != null” and “withText.length() > 0" must be true before the constructor method can execute.
2.The condition "replaceText != null”, “replaceText.length() > 0”, “withText != null” and “withText.length() > 0" must be true before the replaceText() method can execute.

@post-condition: The condition "result == true" must be true when replaceText ()  method finished executing.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
5.	Class SetFontSize

/**
 * @invariant ("text != null && text.length() > 0 && fontSize != null && fontSize.length() > 0")
 */
public class SetFontSize {
	
	String filePath;
	String text;
	String fontSize;
	
/**
 * @pre ("text != null && text.length() > 0 && fontSize != null && fontSize.length() > 0")
 */
	public SetFontSize(String filePath, String text, String fontSize) {
		super();
		this.filePath = filePath;
		this.text = text;
		this.fontSize = fontSize;
	}
	
/**
 * @pre ("text != null && text.length() > 0 && fontSize != null && fontSize.length() > 0")
 * @post ("result == true")	
 */
	public boolean setFontSize() {
		
	}
 
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
@ Invariant: The condition " text!= null”, “text.length() > 0”, “fontSize!= null” and “fontSize.length() > 0" must be true of a class whenever it is accessible to the client.

@pre-condition: 
1.The condition " text!= null”, “text.length() > 0”, “fontSize!= null” and “fontSize.length() > 0" must be true before the constructor method can execute.
2.The condition " text!= null”, “text.length() > 0”, “fontSize!= null” and “fontSize.length() > 0" must be true before the replaceText() method can execute.

@post-condition: The condition "result == true" must be true when setFontSize ()  method finished executing.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

